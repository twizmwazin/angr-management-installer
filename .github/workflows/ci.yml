name:

on:
  push:


jobs:
  linux-build:
    runs-on: ubuntu-18.04

    steps:
    - run: sudo apt install -y zstd
      name: Install dependencies
    - uses: actions/checkout@v3
    - run: ./linux/build_installer.sh
      name: Build installer
    - uses: actions/upload-artifact@v3
      with:
        name: angr-management-linux
        path: ./linux/angr-management-installer-linux.tar.gz

  linux-test:
    strategy:
      matrix:
        version:
        - "18.04"
        - "20.04"
        - "22.04"
    runs-on: ubuntu-${{ matrix.version }}
    needs: linux-build

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: angr-management-linux
        path: artifact

    - run: sudo apt update && sudo apt-get install -y xvfb x11-utils libqt5gui5
      name: Install GUI testing libraries
    - run: tar xvf ./artifact/angr-management-installer-linux.tar.gz
      name: Extract installer
    - run: ./angr-management-install/install.sh
      name: Run installer
    - run: |
        xvfb-run bash -c '
          ~/.angr-management/python/install/bin/angr-management &
          sleep 10 && output=$(xwininfo -tree -root)
          [[ "$output" == *"angr management"* ]] || exit 1
        '
      name: Test angr management start

  windows-build:
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v3
    - run: Install-Module -Force ps2exe
      shell: pwsh
    - run: .\windows\build_installer.ps1
      name: Build installer
    - uses: actions/upload-artifact@v3
      with:
        name: angr-management-windows
        path: ./windows/angr-management-installer-windows.zip

  windows-test:
    strategy:
      matrix:
        version:
        - "2019"
        - "2022"
    runs-on: windows-${{ matrix.version }}
    needs: windows-build

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: angr-management-windows
        path: artifact

    - run: 7z e -y -bb3 .\artifact\angr-management-installer-windows.zip; exit 0
      name: Extract installer
    - run: .\angr-management-install\install
      name: Run installer
    - run: |
        & $env:appdata + \angr-management\python\Scripts\angr-management.exe
        foreach ($title in Get-Process | Select-Object MainWindowTitle) {
          if ($title contains "angr management") {
            exit 0
          }
        }
        exit 1
      name: Test angr management start
      shell: pwsh
